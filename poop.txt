@app.route("/wcbetting", methods=["GET", "POST"])
@login_required
def worldcup():
    input = "World Cup"

    if request.method == "GET":

        # Connect to our database
        try:
            conn = sqlite3.connect("soccerbase.db")
            db = conn.cursor()

        except sqlite3.Error as error:
            print("Error while connecting to sqlite", error)
            sys.exit(1)

        # Gets the id of fixtures we are going to display
        fixtures = get_fixture_ids(convertinput(db, input), season)

        # Returns dictionary of odds, in format of home away for every fixture
        odds = get_odds(convertinput(db, input), season, fixtures)

        # Gets the information about fixtures
        info = get_fixtures_info(fixtures)

        length = len(info)

        conn.close()

        return render_template("wcbetting.html", odds = odds, info = info, length = length, fixtures = fixtures)

    else:
        fixture = request.form.get("fixture")
        team = request.form.get("team")
        odds = request.form.get("odds")
        money = request.form.get("money")

        if not fixture or not team or not odds:
            return apology("Click a Button to Bet!", 400)

        if not money:
            return apology("Put in Money", 400)

        if not money.isdigit():
            return apology("Invalid amount", 400)
        money = int(money)
        if money < 10:
            return apology("The minimum bet amount is 10$")

        # Connect to our database
        try:
            conn = sqlite3.connect("soccerbase.db")
            db = conn.cursor()

        except sqlite3.Error as error:
            print("Error while connecting to sqlite", error)
            sys.exit(1)

        # Update user balance
        current = db.execute("SELECT cash FROM users WHERE id = ?", (session["user_id"], ))
        current = current.fetchone()
        print(current)
        if current < money:
            return apology("Can't afford")
        else:
            db.execute("UPDATE users SET cash = ? WHERE id = ?", (current-money, session["user_id"]))

        # Update history
        db.execute("INSERT INTO bets (user_id, amount, fixture, bet) VALUES (?, ?, ?, ?)", (session["user_id"]), money, fixture, team)

        return redirect("/")